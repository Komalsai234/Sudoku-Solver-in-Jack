// Implememntation of Multi-Dimensional Array in Jack

class MultiArray {
  field Array a; // first row
  field Array b; // second row
  field Array c; // third row
  field Array d; // forth row
  field Array e; // five row
  field Array f; // sixth row
  field Array g; // seventh row
  field Array h; // eight row
  field Array i; // ninth row

  field int length;

  constructor MultiArray new(int numberOfColumns){
    let length = numberOfColumns;
    let a = Array.new(length);
    let b = Array.new(length);
    let c = Array.new(length);
    let d = Array.new(length);
    let e = Array.new(length);
    let f = Array.new(length);
    let g = Array.new(length);
    let h = Array.new(length);
    let i = Array.new(length);

    return this;
  }

  method void add(int row, int column, int data){
    if(column > length){
      do Output.printString("Array Out Of Bounds Exception");
      do Output.println();
      do Output.printString("Index accessed: ");
      do Output.printInt(column);
      do Output.printString(", Array Length: ");
      do Output.printInt(length);
      return;
    }
    if(row = 0){
      let a[column] = data;
    }
    if(row = 1){
      let b[column] = data;
    }

    if(row = 2){
      let c[column] = data;
    }

    if(row = 3){
      let d[column] = data;
    }

    if(row = 4){
      let e[column] = data;
    }

    if(row = 5){
      let f[column] = data;
    }

    if(row = 6){
      let g[column] = data;
    }

    if(row = 7){
      let h[column] = data;
    }

    if(row = 8){
      let i[column] = data;
    }

     if(~(MultiArray.or(row))) {
      do Output.printString("Enter valid row number");
    }
    return;
  }

  method int get(int row, int column){
    if(column > length){
      do Output.printString("Array Out Of Bounds Exception");
      do Output.println();
      do Output.printString("Index accessed: ");
      do Output.printInt(column);
      do Output.printString(", Array Length: ");
      do Output.printInt(length);
      return -32767;
    }
    if(row = 0){
      return a[column];
    }
    if(row = 1){
      return b[column];
    }

    if(row = 2){
      return c[column];
    }

    if(row = 3){
      return d[column];
    }

    if(row = 4){
      return e[column];
    }

    if(row = 5){
      return f[column];
    }

    if(row = 6){
      return g[column];
    }

    if(row = 7){
      return h[column];
    }

    if(row = 8){
      return i[column];
    }

     if(~(MultiArray.or(row))) {
      do Output.printString("Enter valid row number");
    }
    return -32767;
  }

  method int lenght(){
    return length;
  }

  function boolean or(int row){
    if(row = 0){
      return true;
    }
    if(row = 1){
      return true;
    }

    if(row = 2){
      return true;
    }
    if(row = 3){
      return true;
    }
    if(row = 4){
      return true;
    }
    if(row = 5){
      return true;
    }
    if(row = 6){
      return true;
    }
    if(row = 7){
      return true;
    }
    if(row = 8){
      return true;
    }
    return false;
  }
}
